# syntax=docker/dockerfile:latest
# Build cnsenter
FROM --platform=${TARGETPLATFORM} golang:1.20.8 as builder

ARG TARGETPLATFORM
ARG TARGETOS
ARG TARGETARCH
ARG VERSION

WORKDIR /workspace

COPY . .

RUN CGO_ENABLED=0 GO111MODULE=on go build -a -ldflags="-X 'github.com/ssup2/kpexec/pkg/cmd/cnsenter.version=${VERSION}'" -o cnsenter cmd/cnsenter/main.go

# Download crictl
FROM --platform=${TARGETPLATFORM} alpine:3 as downloader

ARG TARGETPLATFORM
ARG TARGETOS
ARG TARGETARCH

ENV CRICTL_VERSION=v1.28.0

RUN [ "$TARGETPLATFORM" == "linux/arm64" ] && ARCHITECTURE=arm || ARCHITECTURE=amd64; \
  wget -O- "https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCHITECTURE}.tar.gz" | tar xzvf - -C /usr/local/bin

# Build image
FROM --platform=${TARGETPLATFORM} alpine:3

COPY --from=builder --chmod=755 --chown=root /workspace/cnsenter /usr/local/bin/cnsenter
COPY --from=downloader --chmod=755 --chown=root /usr/local/bin/crictl /usr/local/bin/crictl

CMD ["cnsenter"]
HEALTHCHECK NONE
