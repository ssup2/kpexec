name: build-cnsenter-tools

on:
  push:
    branches: [master]
  release:
    types: [published]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Prepare
      id: prepare
      run: |
        DOCKER_IMAGE=ssup2/cnsenter-tools
        DOCKER_PLATFORMS=linux/amd64,linux/arm64
        VERSION=latest

        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        fi

        TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"
        if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          TAGS="$TAGS --tag ${DOCKER_IMAGE}:latest"
        fi

        echo ::set-output name=docker_image::${DOCKER_IMAGE}
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
          --build-arg VERSION=${VERSION} \
          --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
          --build-arg VCS_REF=${GITHUB_SHA::8} \
          ${TAGS} --file ./Dockerfile-cnsenter-tools .

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build image
      run: |
        docker buildx build --pull --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}

    - name: Login to DockerHub
      if: success() && github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_SSUP2_ID }}
        password: ${{ secrets.DOCKER_HUB_SSUP2_PASSWORD }}

    - name: Push image
      if: success() && github.event_name != 'pull_request'
      run: |
        docker buildx build --pull --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}

    - name: Inspect image
      if: always() && github.event_name != 'pull_request'
      run: |
        docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}
